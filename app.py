from dotenv import load_dotenv
load_dotenv()

import os
import logging
from logging.handlers import RotatingFileHandler
from flask import Flask, jsonify
from flask_cors import CORS
from flask_login import LoginManager

# --- Import c√°c Blueprints c·ªßa b·∫°n ---
from api.analyze import analyze_endpoint
from webhook import webhook_blueprint
from admin import admin_blueprint, login_manager  

# --- C·∫•u h√¨nh Logging N√¢ng cao ---
# Ghi log ra c·∫£ console (cho Render xem) v√† file (cho dashboard ƒë·ªçc)
LOG_FILE = "cybershield.log"
logging.basicConfig(
    level=logging.INFO,
    format='%(asctime)s [%(levelname)s] %(name)s: %(message)s',
    handlers=[
        # Gi·ªõi h·∫°n file log ·ªü 10MB, gi·ªØ l·∫°i 5 file c≈©
        RotatingFileHandler(LOG_FILE, maxBytes=10485760, backupCount=5, encoding='utf-8'),
        logging.StreamHandler()
    ]
)
logger = logging.getLogger(__name__)

# --- Kh·ªüi t·∫°o ·ª®ng d·ª•ng Flask ---
app = Flask(__name__)
# SECRET_KEY l√† b·∫Øt bu·ªôc ƒë·ªÉ Flask-Login v√† sessions ho·∫°t ƒë·ªông an to√†n
app.config['SECRET_KEY'] = os.environ.get('FLASK_SECRET_KEY', os.urandom(24))
CORS(app)

# --- Kh·ªüi t·∫°o v√† G·∫Øn Flask-Login v√†o App ---
login_manager.init_app(app)
# N·∫øu ng∆∞·ªùi d√πng ch∆∞a ƒëƒÉng nh·∫≠p v√† c·ªë truy c·∫≠p trang c·∫ßn login,
# h·ªç s·∫Ω b·ªã chuy·ªÉn h∆∞·ªõng ƒë·∫øn trang n√†y.
login_manager.login_view = "admin_blueprint.login"

# --- ƒêƒÉng k√Ω t·∫•t c·∫£ c√°c Blueprints ---
app.register_blueprint(analyze_endpoint, url_prefix='/api')
app.register_blueprint(webhook_blueprint) # Webhook n√™n ·ªü root ƒë·ªÉ Facebook d·ªÖ t√¨m
app.register_blueprint(admin_blueprint, url_prefix='/admin') # Giao di·ªán admin c√≥ ti·ªÅn t·ªë /admin

# --- C√°c Route C∆° b·∫£n v√† Error Handlers (Gi·ªØ nguy√™n) ---

@app.route('/')
def home():
    """Home endpoint - cyberpunk gaming vibe"""
    return jsonify({
        'banner': '‚ö° WELCOME TO ARENA OF CYBERSHIELD ‚ö°',
        'status': 'üü¢ S·∫µn S√†ng',
        'version': '1.0.0',
        'server': '0xCyb3r-Sh13ld',
        'message': [
            "Ch√†o m·ª´ng ƒë·∫øn v·ªõi Server c·ªßa Cyber Shield",
            "K·∫ª ƒë·ªãch s·∫Ω xu·∫•t tr·∫≠n sau 5 gi√¢y"
        ]
    })

@app.route('/health')
def health_check():
    return jsonify({
        'status': 'üü¢ Systems Nominal',
        'hp': '100/100',
        'mana': '‚àû',
        'latency_ms': 5,
        'service': 'cybershield-backend',
        'note': 'T·∫ø ƒë√†n c√≤n ·ªïn'
    })

@app.errorhandler(404)
def not_found(error):
    return jsonify({'error': '‚ùå 404: Page Not Found ://'}), 404

@app.errorhandler(500)
def internal_error(error):
    logger.error(f"Internal error: {str(error)}")
    return jsonify({'error': 'üí• 500: Quay v·ªÅ ph√≤ng th·ªß. T·∫ø ƒë√†n b·ªã t·∫•n c√¥ng'}), 500

# --- Ch·∫°y Server ---
if __name__ == '__main__':
    port = int(os.environ.get('PORT', 10000))
    app.run(host='0.0.0.0', port=port, debug=False)