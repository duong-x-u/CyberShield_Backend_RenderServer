from dotenv import load_dotenv
load_dotenv()

# S·ª¨A L·∫†I D√íNG N√ÄY: Th√™m 'send_from_directory' v√† b·ªè 'send_file' n·∫øu kh√¥ng d√πng ch·ªó kh√°c
from flask import Flask, request, jsonify, send_from_directory
from flask_cors import CORS
import os
import logging
from api.analyze import analyze_endpoint
from webhook import webhook_blueprint
from zalo_webhook import zalo_blueprint

# Configure logging
logging.basicConfig(
    level=logging.INFO,
    format='%(asctime)s - %(name)s - %(levelname)s - %(message)s'
)
logger = logging.getLogger(__name__)

# Initialize Flask app
app = Flask(__name__)
CORS(app)

# Register blueprints
app.register_blueprint(analyze_endpoint, url_prefix='/api')
app.register_blueprint(webhook_blueprint, url_prefix='/messenger')
app.register_blueprint(zalo_blueprint, url_prefix='/zalo')


@app.route('/')
def home():
    """Home endpoint - cyberpunk gaming vibe"""
    return jsonify({
        'banner': '‚ö° WELCOME TO ARENA OF CYBERSHIELD ‚ö°',
        'status': 'üü¢ S·∫µn S√†ng',
        'version': '1.0.0',
        'server': '0xCyb3r-Sh13ld',
        'message': [
            "Ch√†o m·ª´ng ƒë·∫øn v·ªõi Server c·ªßa Cyber Shield",
            "K·∫ª ƒë·ªãch s·∫Ω xu·∫•t tr·∫≠n sau 5 gi√¢y"
        ]
    })

@app.route('/health')
def health_check():
    return jsonify({
        'status': 'üü¢ Systems Nominal',
        'hp': '100/100',
        'mana': '‚àû',
        'latency_ms': 5,
        'service': 'cybershield-backend',
        'note': 'T·∫ø ƒë√†n c√≤n ·ªïn'
    })

# DI CHUY·ªÇN ROUTE X√ÅC TH·ª∞C XU·ªêNG D∆Ø·ªöI N√ÄY
@app.route('/<path:filename>')
def serve_static_file(filename):
    # Ch·ªâ ph·∫£n h·ªìi n·∫øu t√™n file b·∫Øt ƒë·∫ßu b·∫±ng 'zalo_verifier'
    if filename.startswith('zalo_verifier') and filename.endswith('.html'):
        # L·∫•y ƒë∆∞·ªùng d·∫´n ƒë·∫øn th∆∞ m·ª•c ch·ª©a file app.py hi·ªán t·∫°i
        root_dir = os.path.dirname(os.path.abspath(__file__))
        # T√¨m file trong th∆∞ m·ª•c 'static' n·∫±m c√πng c·∫•p
        static_dir = os.path.join(root_dir, 'static')
        
        try:
            print(f"Attempting to serve file: {filename} from directory: {static_dir}")
            return send_from_directory(static_dir, filename)
        except FileNotFoundError:
            print(f"Error: File {filename} not found in {static_dir}")
            # Tr·∫£ v·ªÅ l·ªói 404 m·∫∑c ƒë·ªãnh c·ªßa Flask, ƒë·ªÉ errorhandler b√™n d∆∞·ªõi x·ª≠ l√Ω
            from werkzeug.exceptions import NotFound
            raise NotFound()
    
    # N·∫øu kh√¥ng kh·ªõp, ƒë·ªÉ Flask ti·∫øp t·ª•c x·ª≠ l√Ω v√† tr·∫£ v·ªÅ 404
    from werkzeug.exceptions import NotFound
    raise NotFound()


@app.errorhandler(404)
def not_found(error):
    return jsonify({'error': '‚ùå 404: Page Not Found ://'}), 404

@app.errorhandler(500)
def internal_error(error):
    logger.error(f"Internal error: {str(error)}")
    return jsonify({'error': 'üí• 500: Quay v·ªÅ ph√≤ng th·ªß. T·∫ø ƒë√†n b·ªã t·∫•n c√¥ng'}), 500

if __name__ == '__main__':
    port = int(os.environ.get('PORT', 10000))
    app.run(host='0.0.0.0', port=port, debug=False)
